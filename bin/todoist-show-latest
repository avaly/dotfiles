#!/usr/bin/env node

const execSync = require('child_process').execSync;
const fs = require('fs');

const today = new Date().toISOString().replace(/T.+$/, '');

const TODOIST_API_URL = 'https://todoist.com/API/v7/sync';
const TODOS_CACHE = `/tmp/todos-${today}`;

function fetchTodos() {
	console.log('Fetching TODOS...');

	const cmd = `curl -s ${TODOIST_API_URL} -d token="${process.env.TODOIST_API_KEY}"`
		+ ` -d sync_token="*" -d resource_types='["projects","items"]'`;
	const data = JSON.parse(execSync(cmd));

	const comparator = (a, b) => a.item_order < b.item_order ? -1 : 1;

	const counts = data.items.reduce((accumulator, item) => {
		if (!accumulator[item.project_id]) {
			accumulator[item.project_id] = 0;
		}
		accumulator[item.project_id]++;
		return accumulator;
	}, {});

	const result = data.projects
		.filter((project) => counts[project.id] > 0)
		.sort(comparator)
		.map(
			(project) =>
				project.name + '\n' +
				data.items
					.filter((item) => item.project_id === project.id)
					.sort(comparator)
					.map(
						(item) => '\t' + item.content
					).join('\n')
		).join('\n\n');

	return result;
}

function showTodos() {
	if (!fs.existsSync(TODOS_CACHE)) {
		const todos = fetchTodos();

		fs.writeFileSync(TODOS_CACHE, todos);

		console.log(todos);
	}
	else {
		console.log(fs.readFileSync(TODOS_CACHE, 'utf-8'));
	}
}

showTodos();
