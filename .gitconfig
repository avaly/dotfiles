[user]
	name = Valentin Agachi
	email = github-com@agachi.name

[core]
	autocrlf = false
	filemode = true
	whitespace = trailing-space,space-before-tab,indent-with-non-tab
	pager = less -R -S -X -x4 # 4-spaces tabs

[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	ui = auto

[color "branch"]
	current = white cyan bold
	local = cyan
	remote = yellow

[color "diff"]
	commit = yellow bold
	plain = normal
	meta = yellow
	frag = magenta
	old = red bold
	new = green bold
	whitespace = black red

[color "status"]
	header = normal
	added = green
	updated = yellow
	changed = magenta
	untracked = cyan

[branch]
	autosetuprebase = always

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[fetch]
	recurseSubmodules = on-demand

[pull]
	rebase = true

[log]
	date = iso

[status]
	submodulesummary = true

[diff]
	renames = copies		# Detect copies as well as renames.
	submodule = log

[grep]
	lineNumber = true

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"

[alias]
	a = add
	ad = add
	ap = add -p
	amend = commit --amend --no-edit
	amedn = commit --amend --no-edit
	amends = commit --amend --no-verify
	ammend = commit --amend
	ams = commit --amend --no-verify
	co = checkout
	checout = checkout
	both = diff HEAD
	brm = !"git branch --merged | grep -v \"\\*\" | grep -v \"^[^/]\\+$\" | xargs -n 1 git branch -d"
	br = branch
	cl = clone --recursive
	cm = commit -m
	cma = commit -a -m
	cmm = commit
	cmma = commit -a
	cms = commit --no-verify -m
	cmsa = commit --no-verify -a -m
	cp = cherry-pick
	d = diff --color-words
	df = diff
	dl = diff HEAD^
	fhist = log --follow -p --
	filehistory = log --follow -p --
	fix = commit --fixup
	flog = log --follow -p --
	grp = grep --heading --line-number
	l = log -n 50 --graph --pretty=format:'%C(cyan)%h%Creset -%C(yellow)%d%Creset %s (%Cgreen%cr %Cred%ar%Creset) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ls = log -n 10 --graph --pretty=format:'%C(cyan)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lgs = log -n 30 --graph --pretty=format:'%C(cyan)%h%Creset -%C(yellow)%d%Creset %s (%Cgreen%cr %Cred%ar%Creset)' --abbrev-commit --date=relative
	lg = !"git l"
	last = log -n 1
	mrg = merge --ff-only
	ms = checkout master
	nb = checkout -b
	pl = pull --ff-only --rebase origin
	pls = !"git pull --ff-only --rebase origin; git submodule sync --recursive; git su;"
	ps = push origin HEAD
	prod = checkout production
	reset = checkout --
	rs = checkout --
	rbc = rebase --continue
	rbi = rebase --interactive --autosquash master
	rbms = rebase master
	s = status -s
	sa = stash apply
	sd = stash drop
	sl = stash list
	ss = stash save
	st = status
	su = submodule update --init --recursive
	sta = diff --cached --color-words
	staged = diff --cached
	undo = reset --soft HEAD^
	unsta = reset HEAD
	unstage = reset HEAD
